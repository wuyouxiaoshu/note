uname -r  :查看当前内核版本号
3.5.0-23-generic

主版本号.次版本号.释出版本号-修订版本号
主版本号,次版本号是奇数,开发中版本
主版本号,次版本号是偶数,稳定版本

www.kernel.org//linux内核官网

deb软件包:
二进制文件,配置文档,man,info,help帮助手册
ubuntu有两种类型的软件包
1.二进制软件包(.deb)
2.源码包(.deb-src)

软件包命名:
 sublime-text_build-3083_i386.deb
命名格式:软件名_软件版本-修订版本_体系架构.deb

软件包名:整个软件包
软件名:第一个'_'之前的名字

软件包管理工具
dpkg
1.离线安装,安装前准备软件包
2.不会检查软件包的依赖关系

sudo命令: 默认借助root用户权限执行命令
dpkg -i  软件包名  安装本地的Debin软件包

dpkg -r 软件名    移除已经安装的软件包(会留下配置文件)

dpkg  -P 软件名   包括配置文件和软件全部删除

dpkg -L 软件名   列出软件包的信息

apt
1.在线安装
2.会自动检查依赖关系,如果依赖软件不存在,会自动下载修复

sudo apt-get update扫描软件源,更新索引文件
软件源配置文件/etc/apt/sources.list  会列出最适合的软件源(镜像站点)
软件源索引文件/var/lib/apt/lists    (软件源的目录)

sudo  apt-get install  软件名  安装软件
分为四部完成:
1.扫描软件包更新列表,找到最新版本的软件包
2.检查软件包依赖关系
3.从指定的镜像站点中下载软件包
4.解压安装软件包和相关配置

sudo apt-get upgrade  软件包全部升级

sudo apt-get remove 软件名      卸载软件包(会留下配置文件)
sudo apt-get --purge(清除) remove  软件名 (完全卸载)  

重新安装
sudo apt-get install 软件名 --reinstall

修复软件包依赖关系
sudo apt-get check 检查依赖关系
sudo apt-get -f install 修复依赖关系

软件包缓冲区
/var/cache/apt/archives

sudo apt-get clean  删除缓冲区

sudo apt-get autoclean  (保留最新版本的软件包)

下载源码包:
sudo apt-get source 软件包名
下载之后存放路径就是命令执行路径

sudo apt-cache show 软件名   软件包信息

修改镜像地址:
1.打开Ubuntu software center        sudo  software-center
2.选左上角的Edit,下拉菜单中有一个software sources
3.选download from的other
4.选到china 的服务器   mirrors.ustc.edu.cn   点chose service
5.退出窗口
6.执行sudo apt-get update,更新索引文件

alias:对已知或已存在的命令起别名
格式:
	alias  别名='已知或已存在的命令'     短暂的修改,只在当前窗口有效
取消别名:unalias 别名
配置文件修改:(可以永久生效)
1.修改配置文件.bashrc  #注释
#alias  ls='ls --color=auto'
保存退出
重启配置文件(使修改的地方立即生效):source 配置文件名
重启终端
2.命令行修改只在当前终端生效

history:查询历史命令
history 20:显示最近的20条命令记录
history -c:清除当前的命令记录
配置文件.bashrc

echo $HISTSIZE 打印全局变量HISTSIZE的信息   
命令行修改 HISTSIZE=50  (临时修改)
HISTSIZE:决定能够保存多少条记录   1000
在.bash_history文件中保留了之前使用的命令
HISTFILESIZE:决定.bash_history里能存放的命令数量  2000

shell命令格式: (中间都有空格分开!!!)
通常三个部分组成:
命令名称,选项,参数
命令名称:严格区分大小写
选项:由'-'或者'--'引导,用于改变命令执行的形式,可以同时使用多个  
参数:命令执行的对象,参数也可以是多个

选项和参数大多情况下可以调换位置

多条命令可以放在一行中书写使用';'隔开

man man

man 1 命令
man 2 系统调用
man 3 C库调用
man 5 用户级文件
man 7 网络协议

Linux支持7种文件类型:
b:块设备文件
c:字符设备文件
d:目录文件
-:普通文件
l:链接文件
s:套接字文件
p:管道文件

chmod:修改权限
chmod   修改的对象(u,g,o)+/-(r/w/x)  文件名
chmod 777  文件名   (将文件权限置成最高)

touch:

shell命令中的特殊字符
通配符:批量处理文件
*:代替任意长度的任意字符

?:代替一个长度的任意字符

[]:          注意:全部只能匹配一个字符 
ls -l [123].c  显示1.c 2.c 3.c 的内容(区间)
ls -l [1-3].c   同上
ls -l [^123].c 排除了1.c 2.c 3.c 之外的文件信息   

管道符:   半双工   
   |
格式:命令1 | 命令2 | 命令3

功能:连接多条命令,完成特殊操作
         (把前面一条命令的输出结果,传递给后面一条命令,作为后面一条的输入执行,得到结果)

要求:管道符前面的命令,单独执行时,在终端有没有输出结果(即打印现象)
        管道符后面的命令,必须具有读取数据的能力

wc 文件名:统计内容的行数,单词数,字符数(word count)
wc -l:统计内容的行数
wc -w:统计内容的单词个数
wc -c:统计内容的字符数

在命令行上输入wc,可以从命令行数读取数据,再统计
ctrl + d : 结束终端输入

例如
ls /bin | wc -w

cat 文件名:显示文件中内容
cat -n 文件名:显示行号

head -10 文件名:显示文件开头10行
tail -10  文件名:显示文件结尾10行

sort 文件名:归纳整理并输出文件内容

grep:查找字符串

grep "string" 文件名
-n:显示行号
-R:递归子目录查找  //  grep "string" * -n  -R  文件名
"string"的格式:
	"string":显示所有含有"string"的行
	"^string":显示所有以string为开头的行
	"string$":显示所有以string为结尾的行
	"^string$":显示只含有string的行

vim编辑器查找:
在命令模式下/string 回车,查找名为string的字符串
会以高亮形式显示
取消高亮:底行模式下nohl

cat /etc/passwd  |  grep "linux"  -n

sudo  find -name  文件名 : 查找文件

输入输出重定向:
改变shell命令或程序默认输入或输出的位置
标准输入(stdin)键盘   标准输出(stdout)屏幕
格式:
	命令  重定向符  文件名

输出重定向:  > , >>
	ls > info.txt:(新建模式)如果文件不存在(info.txt)则创建该文件,执行命令;
		       若文件存在,则先清空文件中内容,在执行命令
	ls >> info.txt:(追加模式)如果文件不存在则创建文件,执行命令;
		        若文件存在,则在文件末尾追加	       
输入重定向: <
	将文件内容作为命令的输入使用
	wc < file
错误输出重定向:2> , &> (新建模式)   2 >>, &>>(追加模式)
	2>:新建模式,只针对命令执行错误的情况
	2>>:追加模式,功能同上
	&>:新建模式,命令执行正确和错误情况都会输入到指定文件中
	&>>:追加模式

ls -l  文件名  >right.txt   2>wrong.txt

命令置换符: ``
	功能:把一条命令的输出结果作为另外一条命令的参数使用!

	格式:
	命令1 `命令2`
	命令2的输出结果作为命令1的参数使用
	ls `pwd`
	ls -l `ls xxx`

cut: 截取字符段
cut -d '分隔符' -f 1,2,3
-d:指定分隔符
-f:指定分隔符的字符段内容
注:根据指定的分隔符,截取指定的字符段内容
cat /etc/passwd | cut -d ':' -f 1,3,4
cut -d ':' -f 1,3,4 < /etc/passwd
cut /etc/passwd -d ':' -f 1,3,4

练习:
前提:把/etc/passwd 拷贝到当前路径

要求:获取用户linux的信息,写入到文件user.txt中
cat  head tail grep cut | `` >










































